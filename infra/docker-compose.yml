version: "2"
services:
  zipkin:
    image: openzipkin/zipkin:2.12.9
    mem_limit: 1000m
    container_name: zipkin
    environment:
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch
      # #Cassandra
      # - STORAGE_TYPE=cassandra3
      # # When using the test docker image, or have schema pre-installed, you don't need to re-install it
      # - CASSANDRA_ENSURE_SCHEMA=false
      # - CASSANDRA_CONTACT_POINTS=cassandra
    depends_on:
      - elasticsearch
    ports:
      - 9411:9411


  dependencies:
    image: openzipkin/zipkin-dependencies
    mem_limit: 1000m
    container_name: dependencies
    entrypoint: crond -f
    environment:
      # - STORAGE_TYPE=cassandra3
      # - CASSANDRA_CONTACT_POINTS=cassandra
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=elasticsearch
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus
    mem_limit: 1000m
    container_name: prometheus
    ports:
      - 9090:9090
    depends_on:
      - elasticsearch
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    mem_limit: 1000m
    container_name: grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin

  setup_grafana_datasource:
    image: appropriate/curl
    container_name: setup_grafana_datasource
    depends_on:
      - grafana
    volumes:
      - ./prometheus/create-datasource-and-dashboard.sh:/create.sh:ro
    command: /create.sh

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "4560:4560"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  setup_kibana_index:
    image: appropriate/curl
    container_name: setup_kibana_index
    depends_on:
      - kibana
    volumes:
      - ./kibana/create-index.sh:/create.sh:ro
    command: /create.sh